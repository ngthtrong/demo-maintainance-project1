import React, { useState } from 'react';
import './RevertDemo.css';

const RevertDemo = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const totalSteps = 3;

  const steps = [
    {
      title: "X√°c ƒë·ªãnh commit g√¢y l·ªói",
      description: "S·ª≠ d·ª•ng git log ƒë·ªÉ t√¨m m√£ hash c·ªßa commit g√¢y l·ªói",
      commands: [
        { text: "git log --oneline", prompt: "$" },
        { text: "# K·∫øt qu·∫£ v√≠ d·ª•:", prompt: "", isComment: true },
        { text: "a1b2c3d (HEAD -> develop) Feat: Update header styles", prompt: "", isOutput: true },
        { text: "e4f5g6h Refactor: Improve button component", prompt: "", isOutput: true }
      ],
      explanation: "S·ª≠ d·ª•ng git log --oneline ƒë·ªÉ xem l·ªãch s·ª≠ commit m·ªôt c√°ch ng·∫Øn g·ªçn. Identify commit a1b2c3d l√† commit g√¢y l·ªói c·∫ßn ƒë∆∞·ª£c ho√†n t√°c.",
      specialNote: "Commit 'a1b2c3d (HEAD -> develop) Feat: Update header styles' l√† commit g√¢y l·ªói hi·ªÉn th·ªã tr√™n to√†n b·ªô trang web."
    },
    {
      title: "S·ª≠ d·ª•ng git revert ƒë·ªÉ t·∫°o commit ho√†n t√°c",
      description: "T·∫°o commit m·ªõi c√≥ n·ªôi dung ng∆∞·ª£c l·∫°i v·ªõi commit g√¢y l·ªói",
      commands: [
        { text: "git revert a1b2c3d", prompt: "$" },
        { text: "# L·ªánh n√†y s·∫Ω m·ªü tr√¨nh so·∫°n th·∫£o ƒë·ªÉ x√°c nh·∫≠n th√¥ng ƒëi·ªáp", prompt: "", isComment: true },
        { text: "# Ch·ªâ c·∫ßn l∆∞u v√† ƒë√≥ng l·∫°i", prompt: "", isComment: true }
      ],
      explanation: "git revert t·∫°o ra m·ªôt commit m·ªõi c√≥ n·ªôi dung ng∆∞·ª£c l·∫°i v·ªõi commit g√¢y l·ªói. ƒê√¢y l√† c√°ch l√†m an to√†n cho c√°c nh√°nh chia s·∫ª v√¨ n√≥ kh√¥ng thay ƒë·ªïi l·ªãch s·ª≠.",
      specialNote: "git revert kh√¥ng x√≥a commit g√¢y l·ªói m√† t·∫°o ra m·ªôt commit m·ªõi ƒë·ªÉ ho√†n t√°c nh·ªØng thay ƒë·ªïi ƒë√≥. ƒêi·ªÅu n√†y gi·ªØ nguy√™n l·ªãch s·ª≠ v√† an to√†n cho team."
    },
    {
      title: "ƒê·∫©y commit ho√†n t√°c l√™n server",
      description: "Chia s·∫ª commit ho√†n t√°c v·ªõi to√†n b·ªô team",
      commands: [
        { text: "git push origin develop", prompt: "$" }
      ],
      explanation: "ƒê·∫©y commit ho√†n t√°c l√™n server ƒë·ªÉ t·∫•t c·∫£ th√†nh vi√™n trong team c√≥ th·ªÉ c·∫≠p nh·∫≠t. Nh√°nh develop ƒë√£ tr·ªü v·ªÅ tr·∫°ng th√°i tr∆∞·ªõc khi c√≥ commit l·ªói, v√† l·ªãch s·ª≠ v·∫´n ghi l·∫°i r√µ r√†ng.",
      specialNote: "B√¢y gi·ªù, nh√°nh develop ƒë√£ tr·ªü v·ªÅ tr·∫°ng th√°i tr∆∞·ªõc khi c√≥ commit l·ªói, v√† l·ªãch s·ª≠ v·∫´n ghi l·∫°i r√µ r√†ng r·∫±ng m·ªôt thay ƒë·ªïi ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán v√† sau ƒë√≥ ƒë√£ ƒë∆∞·ª£c ho√†n t√°c."
    }
  ];

  const nextStep = () => {
    if (currentStep < totalSteps) {
      setCurrentStep(currentStep + 1);
    }
  };

  const prevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  const goToStep = (step) => {
    setCurrentStep(step);
  };

  return (
    <div className="revert-demo">
      <div className="demo-header">
        <h1>Demo 3: Ho√†n t√°c thay ƒë·ªïi g√¢y l·ªói v·ªõi Git Revert</h1>
        <div className="demo-scenario">
          <strong>T√¨nh hu·ªëng:</strong> Sau khi m·ªôt commit ƒë∆∞·ª£c ƒë·∫©y l√™n nh√°nh develop, c·∫£ nh√≥m ph√°t hi·ªán ra n√≥ g√¢y l·ªói hi·ªÉn th·ªã tr√™n to√†n b·ªô trang web. 
          C·∫ßn ph·∫£i lo·∫°i b·ªè thay ƒë·ªïi n√†y m·ªôt c√°ch an to√†n m√† kh√¥ng x√≥a l·ªãch s·ª≠.
        </div>
      </div>

      <div className="demo-content">
        <div className="step-navigator">
          <h3>C√°c b∆∞·ªõc th·ª±c hi·ªán:</h3>
          <div className="step-buttons">
            {Array.from({ length: totalSteps }, (_, i) => (
              <button
                key={i + 1}
                className={`step-btn ${currentStep === i + 1 ? 'active' : ''} ${currentStep > i + 1 ? 'completed' : ''}`}
                onClick={() => goToStep(i + 1)}
              >
                {i + 1}
              </button>
            ))}
          </div>
        </div>

        <div className="step-content">
          <div className="step-header">
            <h2>B∆∞·ªõc {currentStep}: {steps[currentStep - 1].title}</h2>
            <p>{steps[currentStep - 1].description}</p>
          </div>

          {steps[currentStep - 1].commands.length > 0 && (
            <div className="command-section">
              <h4>L·ªánh Git:</h4>
              <div className="command-block">
                {steps[currentStep - 1].commands.map((command, index) => (
                  <div key={index} className="command-line">
                    {!command.isComment && !command.isOutput && (
                      <span className="command-prompt">{command.prompt}</span>
                    )}
                    <span className={`command-text ${command.isComment ? 'comment' : ''} ${command.isOutput ? 'output' : ''}`}>
                      {command.text}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          )}

          <div className="explanation-section">
            <h4>Gi·∫£i th√≠ch:</h4>
            <p>{steps[currentStep - 1].explanation}</p>
          </div>

          {steps[currentStep - 1].specialNote && (
            <div className="special-note">
              <h4>L∆∞u √Ω quan tr·ªçng:</h4>
              <p>{steps[currentStep - 1].specialNote}</p>
            </div>
          )}
        </div>

        <div className="step-controls">
          <button 
            className="nav-btn" 
            onClick={prevStep} 
            disabled={currentStep === 1}
          >
            ‚Üê B∆∞·ªõc tr∆∞·ªõc
          </button>
          
          <span className="step-indicator">
            {currentStep} / {totalSteps}
          </span>
          
          <button 
            className="nav-btn" 
            onClick={nextStep} 
            disabled={currentStep === totalSteps}
          >
            B∆∞·ªõc ti·∫øp ‚Üí
          </button>
        </div>
      </div>

      <div className="git-workflow-diagram">
        <h3>S∆° ƒë·ªì minh h·ªça Git Revert</h3>
        <div className="diagram-container">
          <svg className="workflow-svg" width="800" height="200" viewBox="0 0 800 200">
            {/* Develop branch timeline */}
            <line x1="50" y1="100" x2="750" y2="100" stroke="#9b59b6" strokeWidth="4"/>
            <text x="20" y="95" className="branch-label">develop</text>
            
            {/* Commits */}
            <circle cx="200" cy="100" r="10" fill="#27ae60"/>
            <circle cx="400" cy="100" r="10" fill="#e74c3c"/>
            <circle cx="600" cy="100" r="10" fill="#f39c12"/>
            
            {/* Commit labels */}
            <text x="170" y="130" fontSize="12" fill="#27ae60" fontWeight="600">E4F5G6H</text>
            <text x="185" y="145" fontSize="10" fill="#7f8c8d">(T·ªët)</text>
            
            <text x="370" y="130" fontSize="12" fill="#e74c3c" fontWeight="600">A1B2C3D</text>
            <text x="385" y="145" fontSize="10" fill="#e74c3c">(L·ªói)</text>
            
            <text x="570" y="130" fontSize="12" fill="#f39c12" fontWeight="600">C9D8E7F</text>
            <text x="560" y="145" fontSize="10" fill="#f39c12">Revert A1B2C3D</text>
            
            {/* Revert arrow */}
            <path d="M 580 80 Q 500 60 420 80" stroke="#f39c12" strokeWidth="3" fill="none" markerEnd="url(#revertArrow)" strokeDasharray="5,5"/>
            
            {/* Arrow marker */}
            <defs>
              <marker id="revertArrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
                <polygon points="0 0, 10 3.5, 0 7" fill="#f39c12"/>
              </marker>
            </defs>
            
            {/* Revert explanation */}
            <text x="450" y="50" fontSize="11" fill="#f39c12" fontWeight="600">Ho√†n t√°c</text>
            
            {/* Timeline arrows */}
            <path d="M 730 100 l 15 -5 l 0 10 Z" fill="#9b59b6"/>
            <text x="740" y="105" fontSize="10" fill="#9b59b6">Th·ªùi gian</text>
          </svg>
        </div>
        <p className="diagram-description">
          H√¨nh 5.3: Minh h·ªça git revert t·∫°o m·ªôt commit m·ªõi ƒë·ªÉ ho√†n t√°c thay ƒë·ªïi.
          Commit C9D8E7F ƒë∆∞·ª£c t·∫°o ra ƒë·ªÉ ho√†n t√°c nh·ªØng thay ƒë·ªïi c·ªßa commit A1B2C3D g√¢y l·ªói, 
          nh∆∞ng kh√¥ng x√≥a l·ªãch s·ª≠ c·ªßa commit g√¢y l·ªói.
        </p>
      </div>

      <div className="comparison-section">
        <h3>So s√°nh Git Revert vs Git Reset</h3>
        <div className="comparison-grid">
          <div className="comparison-item revert">
            <h4>Git Revert</h4>
            <div className="pros">
              <h5>‚úÖ ∆Øu ƒëi·ªÉm:</h5>
              <ul>
                <li>An to√†n cho nh√°nh chia s·∫ª</li>
                <li>Gi·ªØ nguy√™n l·ªãch s·ª≠</li>
                <li>C√≥ th·ªÉ ho√†n t√°c nhi·ªÅu commit</li>
                <li>D·ªÖ d√†ng trace l·∫°i</li>
              </ul>
            </div>
            <div className="use-case">
              <h5>üéØ Khi n√†o s·ª≠ d·ª•ng:</h5>
              <p>Khi commit ƒë√£ ƒë∆∞·ª£c push l√™n remote v√† c√≥ ng∆∞·ªùi kh√°c ƒëang s·ª≠ d·ª•ng</p>
            </div>
          </div>
          
          <div className="comparison-item reset">
            <h4>Git Reset</h4>
            <div className="pros">
              <h5>‚ö†Ô∏è L∆∞u √Ω:</h5>
              <ul>
                <li>Thay ƒë·ªïi l·ªãch s·ª≠</li>
                <li>Nguy hi·ªÉm cho nh√°nh chia s·∫ª</li>
                <li>C√≥ th·ªÉ l√†m m·∫•t d·ªØ li·ªáu</li>
                <li>Kh√≥ trace l·∫°i</li>
              </ul>
            </div>
            <div className="use-case">
              <h5>üéØ Khi n√†o s·ª≠ d·ª•ng:</h5>
              <p>Ch·ªâ d√πng cho commit local ch∆∞a push, ho·∫∑c khi l√†m vi·ªác m·ªôt m√¨nh</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RevertDemo;
